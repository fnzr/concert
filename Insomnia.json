{"_type":"export","__export_format":4,"__export_date":"2023-08-05T15:55:13.819Z","__export_source":"insomnia.desktop.app:v2023.4.0","resources":[{"_id":"req_eb2c6a840d8744c9bb49db5e2ad67943","parentId":"fld_c1c2fa18d60142c498fa44884e0d8720","modified":1690689776179,"created":1683992126600,"url":"{{ _.graphql_url }}","name":"List, Find, Pagination","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query {\\n  # Resource name\\n  artists {\\n    # List is the standard name for returning multiple entries\\n    list(limit: 2 offset: 1) {\\n      # meta value\\n      __typename\\n      id\\n      name\\n    }\\n    # Find is a reserved name and will always return a single value\\n    # It's a type-safe alias for list(single: true)\\n    find(id: 3) {\\n      id\\n      name\\n    }\\n  }\\n  # _total is a special service operation. It counts the result of the requested operation without the limit and offset arguments.\\n  # Use for pagination.\\n  service {\\n    _total(operation: \\\"artists.list\\\")\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992126600,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_c1c2fa18d60142c498fa44884e0d8720","parentId":"wrk_83e4a6bb337d426dbb7b7e8a7b8392a1","modified":1690733738003,"created":1683992132963,"name":"Query","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1690722011116.5,"_type":"request_group"},{"_id":"wrk_83e4a6bb337d426dbb7b7e8a7b8392a1","parentId":null,"modified":1690747411376,"created":1690747411376,"name":"Samples","description":"","scope":"collection","_type":"workspace"},{"_id":"req_293059b781f043dbb1ba75c67fa12b88","parentId":"fld_c1c2fa18d60142c498fa44884e0d8720","modified":1690688876935,"created":1690502978221,"url":"{{ _.graphql_url }}","name":"Association Filtering","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query {\\n  artists {\\n    # List all Elton John (id:3) albums containing the word \\\"Blue\\\"\\n    artist:find(id: 3) {\\n      name      \\n      albums(where: {name: {contains: \\\"Blue\\\"}}) {\\n        name\\n      }\\n    }\\n  }\\n  \\n  albums {\\n    # Lists all albums that have any recording containing the word \\\"love\\\"\\n    albums:list(\\n      #GOTCHA: `album` executes an INNER JOIN with `recording`. Since there are two recordings in the album \\\"Goodbye Yellow Brick Road\\\" containg the word `love`, the result appears twice.\\n      # Remove the comment below to fix.\\n      #distinct: true\\n      where: {      \\n        recordings: {name: {contains: \\\"love\\\"}}\\n      }\\n    ) {\\n      id\\n      name      \\n    }\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992126596.875,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_0772a28b73844974bd733624c87db7e3","parentId":"fld_c1c2fa18d60142c498fa44884e0d8720","modified":1690686528829,"created":1684191109322,"url":"{{ _.graphql_url }}","name":"Subquery","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query {\\n  artists {\\n    list(where: {or: [{id: {eq: 1}} {id: {eq: 2}}]}) {\\n      id\\n      name\\n    }\\n  }\\n  \\n  albums {\\n    #only result_in and result_nin is supported\\n    list(where: {id_artist: {result_in: \\\"artists.list.id\\\"}}) {\\n      id\\n      name\\n    }\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992126593.75,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_02ed7da268ed4700a1b2a25157b5de84","parentId":"fld_c1c2fa18d60142c498fa44884e0d8720","modified":1690686628424,"created":1683999272477,"url":"{{ _.graphql_url }}","name":"Aliases","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query {\\n    konstnarer:artists {\\n      lista:list {\\n        id\\n        namn:name\\n        skivalbum:albums {\\n            id\\n            namn:name\\n        }\\n      }\\n    }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992126550,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_52afb0288af94d3e8037b611ae340bf0","parentId":"fld_c1c2fa18d60142c498fa44884e0d8720","modified":1690687321889,"created":1684003816379,"url":"{{ _.graphql_url }}","name":"Pluck & Custom Fields","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query {\\n  artists {\\n    # Pluck is available on queries to simplify returns, but can't be auto generated on the Schema    \\n    count:find(pluck: \\\"countAll\\\") {\\n      # Every field can use the \\\"expression\\\" argument to execute arbitrary SELECT expressions. The field is still checked on the isFieldReadable call of the Resource, if applicable.\\n      countAll (expression: \\\"count(id)\\\")\\n    }\\n\\t}\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992126525,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_c08899bf9b194dea9b04c9dce75325c3","parentId":"fld_c1c2fa18d60142c498fa44884e0d8720","modified":1690688071917,"created":1690687822084,"url":"{{ _.graphql_url }}","name":"Custom Condition & Having","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query {\\n  artists {\\n    list(\\n      # group is an array of fields\\n      group: [\\\"id\\\"]\\n      # having follow the same rules as `where`\\n      having: {\\n        # note that custom expressions must use Map defined names (no `id` shortcut)\\n        _condition: {expr: \\\"count(albums.id_album)\\\" where: {gt: 2}}\\n      }\\n    ){\\n      name\\n      albumCount (expression: \\\"count(albums.id_album)\\\")\\n\\t  }\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992126512.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_919fc972a54349a187cd734c36b13d1c","parentId":"fld_c1c2fa18d60142c498fa44884e0d8720","modified":1690733801532,"created":1690688126152,"url":"{{ _.graphql_url }}","name":"Order & Join","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query {\\n  artists {\\n    list(\\n      # ordered list of {ORDER: FIELD}\\n      order: [{asc: \\\"name\\\"} {desc: \\\"albums.name\\\"}]\\n      # each join gets an item on the list\\n      join: [{LEFT: \\\"albums\\\"}]\\n    ){\\n      id\\n      name\\n      albumName (expression: \\\"albums.name\\\")\\n\\t  }\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992126506.25,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_65b47926b9344196b0ab27090107dfc4","parentId":"fld_c1c2fa18d60142c498fa44884e0d8720","modified":1690689583362,"created":1690688457788,"url":"{{ _.graphql_url }}","name":"Where Examples","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query {\\n  artists {\\n    list(\\n      distinct: true\\n      where: {\\n        albums: {release_date: {gt: 100}}\\n        or: [\\n          {name: {eq: \\\"Mili\\\"}} \\n          {\\n            and: [\\n              {name: {startsWith: \\\"M\\\"}}\\n              {id: {lte: 2}}\\n            ]\\n          }\\n        ]\\n      }\\n    ){\\n      id\\n\\t  }\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683967033556.625,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_e2c33edb55ab4c128cc99324e4dd1643","parentId":"fld_c1c2fa18d60142c498fa44884e0d8720","modified":1691110746529,"created":1691110713244,"url":"{{ _.graphql_url }}","name":"Schema","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query {\\n  __schema\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683967033506.625,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_9d052cf29c9b432f97cd03d2b666c527","parentId":"fld_25327f6534b44158a1f0c0128d4a4fd4","modified":1690690090773,"created":1690689687621,"url":"{{ _.graphql_url }}","name":"Insert","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation {\\n  artists {\\n    insert(\\n      object: {\\n        name: \\\"Suisei\\\"\\n      }) {\\n      id\\n      name\\n    }\\n  }\\n  \\n  albums {\\n    insert_batch(\\n      objects: [\\n        # To-One relationships are set with the {association: {id: $x}} object\\n        { artist: {id: 1} name: \\\"Debutant Ball\\\" }\\n        { artist: {id: 2} name: \\\"Specter\\\" }\\n      ]) {\\n        id\\n        name\\n    }\\n  }\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992132913.0977,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_25327f6534b44158a1f0c0128d4a4fd4","parentId":"wrk_83e4a6bb337d426dbb7b7e8a7b8392a1","modified":1690689675339,"created":1690689675339,"name":"Mutation","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1690689675339,"_type":"request_group"},{"_id":"req_f7c4af3eb08f400fb5bda6c0ab5cbb69","parentId":"fld_25327f6534b44158a1f0c0128d4a4fd4","modified":1690690606201,"created":1690690118469,"url":"{{ _.graphql_url }}","name":"Upsert","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation {\\n  artists {\\n    upsert(\\n      object: {\\n        # BasicResource upsert acts like update if `id` is provided\\n        id: 1\\n        name: \\\"Suisei\\\"\\n      }) {\\n      id\\n      name\\n    }\\n  }\\n  \\n  albums {\\n    upsert_batch(\\n      objects: [\\n        # if ID is not provided (empty/null), behaves like insert. With BasicResource, database must support lastInsertId and PK must be autogenerated.\\n        { id: null artist: {id: 1} name: \\\"Debutant Ball\\\" }\\n        { id: 3 artist: {id: 2} name: \\\"Specter\\\" }\\n        { artist: {id: 1} name: \\\"Still Still Stellar\\\" }\\n      ]) {\\n        id\\n        name\\n    }\\n  }\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992132913.0488,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_666b6894630c4afeaf28ee7011b69147","parentId":"fld_25327f6534b44158a1f0c0128d4a4fd4","modified":1690690909503,"created":1684163156858,"url":"{{ _.graphql_url }}","name":"Update","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation {\\n  artists {\\n    update(\\n      id: 1\\n      set: {\\n        name: \\\"Suisei\\\"\\n      }) {\\n      id\\n      name\\n    }\\n  }\\n  \\n  albums {\\n    update_batch(\\n      where: {or: [{name: {startsWith: \\\"Me\\\"}} {id: {eq: 7}} ]} \\n      set: {\\n        release_date: 100\\n      }) {\\n        id\\n        name\\n        release_date\\n    }\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992132863.0488,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_5bfb74107e4e4f1eb77a4a0a5aa755b1","parentId":"fld_25327f6534b44158a1f0c0128d4a4fd4","modified":1690691362233,"created":1690690937087,"url":"{{ _.graphql_url }}","name":"Delete","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation {\\n  #delete operations return the number of deleted records\\n  artists {\\n    delete(id: 4)\\n  }\\n  \\n  recordings {\\n    delete_batch(\\n      where: {\\n        or: [\\n          {name: {startsWith: \\\"Me\\\"}} \\n          {id: {eq: 7}} \\n        ]\\n      } \\n    )\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992132080.4424,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_d401047fc2374fc88499ee2b31d82000","parentId":"fld_25327f6534b44158a1f0c0128d4a4fd4","modified":1690729745636,"created":1684455933382,"url":"{{ _.graphql_url }}","name":"Many To Many","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation {\\n  users {\\n    update(\\n      id: 2\\n      set: {\\n        groups:  {\\n          # append Group 1, 2 to user 2\\n          append: [1, 2]\\n          # delete Group 3 from user 2\\n          delete: [3]\\n          # remove user 2 from all groups, append Group 1 and 3\\n          replace: [1, 3]\\n        }\\n      }\\n    ) {\\n      id\\n      login\\n      groups {\\n        id\\n        name\\n      }\\n    }\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992132030.4424,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_6ab9be913d83488e990e289519f75c92","parentId":"fld_25327f6534b44158a1f0c0128d4a4fd4","modified":1690733860683,"created":1690729757128,"url":"{{ _.graphql_url }}","name":"One To Many","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation {\\n  artists {\\n    # same rules for update, insert, upsert\\n    update(\\n      id: 2\\n      set: {\\n        # Associaton operations execute their operation and set the foreign key on the child row to the defined above\\n        albums: {\\n          #set id_artist = 2 where id_album in (6, 7)\\n          update: [6, 7]          \\n          # insert album (name, id_artist) values (\\\"...\\\", 2)\\n          insert: [\\n            {\\n              name: \\\"To Kill a Living Book\\\"\\n            }\\n          ]\\n          # upsert operation. Without special behavior, same as \\\"update or insert\\\"          \\n          upsert: [\\n            # here, acts as update\\n            {\\n              id: 4\\n              name: \\\"Paper Bouquet\\\"\\n            }\\n            # here, as insert\\n            {\\n              name: \\\"Gunners in the Rain\\\"\\n            }\\n            # insert (assuming id 500 doesnt exist), forcefully sets primary key. If this is not allowed, handle it in the upsert method of the Resource.\\n            {\\n              id: 500\\n              name: \\\"Key Ingredient\\\"\\n            }\\n          ]\\n          \\n          # delete the associated values. if albums 4, 5 are not associated to artist 2, they are not modified.\\n          # if the parent key is nullable, tries setting it to null\\n          # else, tries to delete the record.\\n          # nullability is defined on the foreign key AttributeMap.\\n          delete: [8, 5]\\n          \\n        }\\n      }\\n\\n    ) {\\n      id\\n      albums {\\n        id\\n        name\\n      }\\n    }\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1683992131664.1392,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_e142cd0e41eb4a13ad21058ff979fb28","parentId":"fld_1ee2f1be585a4caa8744e9b4807e54c6","modified":1690733640357,"created":1690732827264,"url":"{{ _.graphql_url }}","name":"Custom Query","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# Custom query operations can be defined by implementing the CustomOperationsInterface and implementing the getQueries function.\\n\\n# getQueries return an associative array where the key is the operation name (\\\"HasMostAlbums\\\") and the value is the resource method to be called (\\\"queryHasMostAlbums\\\")\\n\\n# by default, BasicResource considers any method prefixed by \\\"query\\\" a custom operation\\n\\nquery {\\n  artists {\\n    HasMostAlbums\\n  }\\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684420659729.75,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_1ee2f1be585a4caa8744e9b4807e54c6","parentId":"wrk_83e4a6bb337d426dbb7b7e8a7b8392a1","modified":1690733741177,"created":1690732789709,"name":"Custom & Services","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1689127798968.5,"_type":"request_group"},{"_id":"req_94a705ade8724c58a0a90058bcd9de27","parentId":"fld_1ee2f1be585a4caa8744e9b4807e54c6","modified":1691202333800,"created":1690733062460,"url":"{{ _.graphql_url }}","name":"Custom Mutation","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# Same as Custom Query, but for Mutations\\n\\n# Notice that Documentation is generated using PHP reflection feature and it only supports basic types (int, string, boolean).\\n# Generating documentation for custom returns and parameters is WIP.\\nmutation {\\n  users {\\n    RevokeRights(id: 2)\\n  }  \\n}\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684377741218.625,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_4e03abcb953548758341082b1b886a59","parentId":"fld_1ee2f1be585a4caa8744e9b4807e54c6","modified":1691201849277,"created":1690733278387,"url":"{{ _.graphql_url }}","name":"Service Query","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# Services allow you to call arbitrary functions, not associated to Resources\\n\\nquery {\\n  service {\\n    server_time\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684356281938.0625,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_7330de51a7134c77afaebbfa5937e658","parentId":"fld_1ee2f1be585a4caa8744e9b4807e54c6","modified":1690733555773,"created":1690733465052,"url":"{{ _.graphql_url }}","name":"Service Mutation","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# Mutation services behave the same as Queries, but should be used when they produce side effects.\\n\\n# See Custom Mutation for information on parameters.\\nmutation {\\n  service {\\n    login(user: \\\"user\\\" password: \\\"password\\\")\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684345552322.7812,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_c09031bbfa2b4e52afd6c7274d2908f3","parentId":"fld_1ee2f1be585a4caa8744e9b4807e54c6","modified":1691248907221,"created":1691202775138,"url":"{{ _.graphql_url }}","name":"Object Parameter","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"# on the PHP side, services accept arbitrary objects as parameters\\n# this enables you to provide validation and handle complex input before entering the service\\n\\nquery {\\n  service {\\n    format_input(input: {\\n      text: \\\"   this will be trimmed      \\\"\\n      count: 50\\n    })\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1684168842617.9395,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_f252e9240045478eae5e2c74492613c4","parentId":"fld_ec54b5ec361f469bab160262e5276ac2","modified":1691250048130,"created":1687565929024,"url":"{{ _.graphql_url }}","name":"Validation","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation {\\n  groups {\\n    insert(object: {\\n      name: \\\"  \\\"\\n    }) {\\n      id\\n      name\\n    }\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1687565922591.75,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_ec54b5ec361f469bab160262e5276ac2","parentId":"wrk_83e4a6bb337d426dbb7b7e8a7b8392a1","modified":1687565922598,"created":1687565922598,"name":"Errors","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1687565922598,"_type":"request_group"},{"_id":"req_a423d311b6374a2da2654dc01b279190","parentId":"fld_ec54b5ec361f469bab160262e5276ac2","modified":1691250499290,"created":1691250106518,"url":"{{ _.graphql_url }}","name":"Invalid Type","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query {\\n  service {\\n    divide_by_two(input: \\\"abc\\\")\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1687565922566.75,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_c7d80d81e9fe476489dbf6b9a78b3ae9","parentId":"fld_ec54b5ec361f469bab160262e5276ac2","modified":1691249062055,"created":1691248950256,"url":"{{ _.graphql_url }}","name":"Resource Not Found","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"query {\\n  abcd {\\n    id\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1687565922541.75,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_e4b8bc5206664a42ad798d20886a3b07","parentId":"fld_ec54b5ec361f469bab160262e5276ac2","modified":1691249563236,"created":1691249459848,"url":"{{ _.graphql_url }}","name":"Operation Not Found","description":"","method":"POST","body":{"mimeType":"application/graphql","text":"{\"query\":\"mutation {\\n  recordings {\\n    insert(object: {name: \\\"aa\\\"})\\n  }\\n}\",\"operationName\":\"Operations\"}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1687356891453.875,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_151e66b57e0c47cace91dc7c5ce91e8334eef4ad","parentId":"wrk_83e4a6bb337d426dbb7b7e8a7b8392a1","modified":1690747562361,"created":1690747411378,"name":"Base Environment","data":{"graphql_url":"http://localhost:24000/graphql"},"dataPropertyOrder":{"&":["graphql_url"]},"color":null,"isPrivate":false,"metaSortKey":1690747411378,"_type":"environment"},{"_id":"jar_151e66b57e0c47cace91dc7c5ce91e8334eef4ad","parentId":"wrk_83e4a6bb337d426dbb7b7e8a7b8392a1","modified":1690747411379,"created":1690747411379,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"env_1f7d85ca063a44c69df1deaf2bfb46fb","parentId":"env_151e66b57e0c47cace91dc7c5ce91e8334eef4ad","modified":1690892604023,"created":1690747601794,"name":"Concert","data":{"graphql_url":"http://localhost:5050/graphql"},"dataPropertyOrder":{"&":["graphql_url"]},"color":null,"isPrivate":false,"metaSortKey":1690747601794,"_type":"environment"}]}