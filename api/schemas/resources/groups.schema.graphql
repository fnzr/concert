type groups {
    id: ID
    name: String
    users(where: UserWhere pluck: String): [User!]
}

input groupsWhere {
    or: [groupsWhere!]
    and: [groupsWhere!]
    _condition: [CustomCondition!]
    id: WhereCondition
    name: WhereCondition
    users: UserWhere
}

type groupsResource {
    list(
        id: ID
        where: groupsWhere
        limit: Int
        offset: Int
        group: [String!]
        order: [Order!]
        pluck: String
        having: groupsWhere
        join: [Join!]
        distinct: Boolean
    ): [groups!]!
    find(
        id: ID
        pluck: String
        where: groupsWhere
    ): groups
}


input groupsMutationInput {
    id: ID
    name: String
    users: groupsUserAssociation
}

input groupsUserAssociation {
    append: [ID!]
    delete: [ID!]
    replace: [ID!]
}

type groupsMutation {
    insert(object: groupsMutationInput!): groups
    insert_batch(objects: [groupsMutationInput!]!): [groups!]!
}
