type recordings {
    id: ID
    name: String
    album(where: AlbumWhere pluck: String): [Album!]
}

input recordingsWhere {
    or: [recordingsWhere!]
    and: [recordingsWhere!]
    _condition: [CustomCondition!]
    id: WhereCondition
    name: WhereCondition
    album: AlbumWhere
}

type recordingsResource {
    list(
        id: ID
        where: recordingsWhere
        limit: Int
        offset: Int
        group: [String!]
        order: [Order!]
        pluck: String
        having: recordingsWhere
        join: [Join!]
        distinct: Boolean
    ): [recordings!]!
    find(
        id: ID
        pluck: String
        where: recordingsWhere
    ): recordings
}


input recordingsMutationInput {
    id: ID
    name: String
    album: recordingsAlbumAssociation
}

input recordingsAlbumAssociation {
    id: ID!
}

type recordingsMutation {
    delete(id: ID!): Int
    delete_batch(where: recordingsWhere!): Int
}
